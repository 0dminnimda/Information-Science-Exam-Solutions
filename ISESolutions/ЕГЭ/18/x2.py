d = [
    [2, 79, 5, 75, 7, 98, 53, 92, 72, 39],
    [48, 31, 23, 15, 98, 87, 3, 3, 47, 26],
    [6, 12, 59, 2, 33, 66, 42, 69, 75, 1],
    [48, 88, 45, 64, 17, 43, 83, 11, 1, 71],
    [66, 1, 27, 14, 2, 8, 41, 11, 15, 28],
    [35, 1, 64, 73, 26, 34, 10, 12, 31, 91],
    [8, 37, 48, 2, 50, 41, 65, 33, 86, 4],
    [36, 64, 5, 99, 94, 70, 33, 50, 98, 16],
    [28, 1, 69, 16, 25, 63, 19, 21, 84, 56],
    [79, 39, 15, 9, 77, 6, 12, 72, 32, 18],

    # [1, 8, 8, 4],
    # [10, 1, 1, 3],
    # [1, 3, 12, 2],
    # [2, 3, 5, 6],
]

d = d[::-1]


m = -100000
new = (
    [[0 for _ in range(9)] + [m] for _ in range(9)]
    + [[m for _ in range(10)]])
    # [0, 0, 0, 0, m],
    # [0, 0, 0, 0, m],
    # [0, 0, 0, 0, m],
    # [0, 0, 0, 0, m],
    # [m, m, m, m, m],

n = 10

for i in range(n*2-1):
    j = 0
    while i >= 0:
        if (i == j == 0):
            new[i][j] = d[i][j]
        elif (i < n and j < n):
            new[i][j] = d[i][j] + max(new[i][j-1], new[i-1][j])

        j += 1
        i -= 1

# from pprint import pprint
# pprint(new)
print("[")
for item in new[:-1]:
    print(f" {item[:-1]},")
print("]")
